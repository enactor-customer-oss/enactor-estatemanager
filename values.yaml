global: 
  env: tmp
  clusterUrl: 'enactor-em.local'

  dependsOn:
    imagePullPolicy: IfNotPresent
    image: busybox
    tag: "1.31"
    command:
      - sh
      - -c
      - |-
        echo -e "Checking for the availability of '$HOST' on port $PORT";
        while ! nc -z $HOST $PORT;
          do sleep $INTERVAL;
          printf "-";
        done;
        echo -e "  >> Service '$HOST' has started";
    resources:
      requests:
        cpu: '20m'
        memory: '20Mi'
      limits:
        cpu: '100m'
        memory: '200Mi'
    securityContext: {}

  persistence:
    storageClass: default-storage-class

  # -- DB Connection details
  # set to mariadb-0.mariadb if using the in-cluster database (see below) else
  # set DB connection details here. db_pass is encrypted in estate manager
  database:
    host: mariadb-0.mariadb
    port: 3306
    # setting DB-name here could collide with mariadb.auth.database, thus we use a shared hardcoded name instead

  # -- Pass extra environment variables to all enactor containers (override common vars).
  enactor:
    image:
      registry:
      tag:

    extraVars:
      - name: ENACTOR_DB_USER
        value: "enactor"
      - name: ENACTOR_DB_PASS
        valueFrom:
          secretKeyRef:
            name: em-secrets
            key: mariadb-password
      - name: ENACTOR_AXIS2_USER
        valueFrom:
          secretKeyRef:
            name: em-secrets
            key: axis2_username
      - name: ENACTOR_AXIS2_PASSWORD
        valueFrom:
          secretKeyRef:
            name: em-secrets
            key: axis2_password
      - name: ENACTOR_TASK_SYSTEMUSER
        valueFrom:
          secretKeyRef:
            name: em-secrets
            key: task_username
      - name: ENACTOR_TASK_SYSTEMPASSWORD
        valueFrom:
          secretKeyRef:
            name: em-secrets
            key: task_password

    imagePullSecretData: null

  common:
    processSet: null

  modules:
    crm: false
    customerCollection: false
    inventory: false
    order: false
    processing: true
    repair: false
    timeAttendance: false

  java:
    country: null
    timezone: null

# Enactor Configuration
  
em-processing:
  deploy: true
  ingress:
    enabled: true
  persistentVolume:
    storageClass: managed-nfs-storage-retain
    size: "100Gi"
  sidecars:
    empwatch:
      deploy: true
      tag: '1.2.0'

em-application:
  deploy: true
  ingress:
    enabled: true
  persistentVolume:
    storageClass: managed-nfs-storage-retain
    size: "5Gi"

em-services:
  deploy: true
  ingress:
    enabled: true

em-terminalmanagement:
  deploy: true
  ingress:
    enabled: false

em-adyenintegrationservice:
  deploy: true
  ingress:
    enabled: true

em-cardauth:
  deploy: true

em-reports:
  deploy: true


# Thirdparty Configuration
mariadb:
  deploy: true
  auth:
    database: "enactorem"
    username: "enactor"
    existingSecret: em-secrets
  primary:
    persistence:
      size: "25Gi"
      storageClass: managed-nfs-storage-retain
    configuration: |
      [mysqld]
      skip-name-resolve
      explicit_defaults_for_timestamp
      basedir=/opt/bitnami/mariadb
      plugin_dir=/opt/bitnami/mariadb/plugin
      port=3306
      socket=/opt/bitnami/mariadb/tmp/mysql.sock
      tmpdir=/opt/bitnami/mariadb/tmp
      max_allowed_packet=16M
      bind-address=*
      pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid
      log-error=/opt/bitnami/mariadb/logs/mysqld.log

      slow_query_log=0
      slow_query_log_file=/opt/bitnami/mariadb/logs/mysqld.log
      long_query_time=10.0

      character-set-server  = utf8mb4
      collation-server      = utf8mb4_general_ci
      transaction_isolation = READ-COMMITTED
      lower_case_table_names = 1

      [client]
      port=3306
      socket=/opt/bitnami/mariadb/tmp/mysql.sock
      default-character-set=UTF8
      plugin_dir=/opt/bitnami/mariadb/plugin

      [manager]
      port=3306
      socket=/opt/bitnami/mariadb/tmp/mysql.sock
      pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid
    